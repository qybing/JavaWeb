<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<context:component-scan base-package="com.bank">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 注册属性文件 -->
	<context:property-placeholder location="classpath:mysql.properties"/>

	<!--   注册数据源:C3P0 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	
	<!--配置与MyBatis整合  --> 
	
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!--指定mybatis的全局配置的位置  -->
			<property name="configLocation" value="classpath:mybatis-config.xml"/>
			<property name="dataSource" ref="dataSource"/>
			<!--指定mybatis,mapper文件配置的位置  -->
			<property name="mapperLocations" value="classpath:/com/bank/dao/*.xml"/>
	</bean>
		
	<!--配置扫描器，将mybatis接口实现加入到IOC容器中  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有的dao接口的实现，加入ioc容器中  -->
		<property name="basePackage" value="com.bank.dao"></property>
	</bean>
	
	
	
	
	
	
	
	<!--事务控制的配置  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--控制住数据源  -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 开启注解事务 -->
	<aop:config>
	<!-- 	切入点表达式  -->
		<!-- <aop:pointcut expression="execution(* *..test.*.*(..))" id="txPoint"/> -->
		<aop:pointcut expression="execution(* com.bank.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强  -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<!--事务增强事务如何切入  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="transfer*" read-only="true"/>

		</tx:attributes>
	</tx:advice>




	<!-- Kaptcha验证码生成器 -->
<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
    <property name="config">
        <bean class="com.google.code.kaptcha.util.Config">
            <constructor-arg>
                <props>
                    <prop key="kaptcha.border">no</prop><!-- 是否有边框 -->
                    <prop key="kaptcha.noise.color">25,25,25</prop><!-- 干扰线颜色 -->
                    <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                    <prop key="kaptcha.image.width">140</prop>
                    <prop key="kaptcha.image.height">40</prop>
                    <prop key="kaptcha.textproducer.char.string">AZWSXEDCRFVTGBYHNUJMIKLP23456789</prop>
                    <prop key="kaptcha.textproducer.font.color">4,14,156</prop><!-- 验证码字体颜色 -->
                    <prop key="kaptcha.textproducer.font.size">36</prop><!-- 验证码字体大小 -->
                    <prop key="kaptcha.session.key">code</prop>
                    <prop key="kaptcha.textproducer.char.length">5</prop><!-- 验证码个数 -->
                    <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                </props>
            </constructor-arg>
        </bean>
    </property>
</bean>




</beans>